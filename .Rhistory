qt(0.975, length(propsSet)-1)
qt(0.975,10000)
qt(0.975,3 )
qt(0.975,4)
library(meta)
?metaprop
jagsmodelSMSC5 <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,0.001)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
as.numeric(factor(SMSCdataC$relapse.2y.after.study))-1
#give the data
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=as.numeric(factor(SMSCdataC$relapse.2y.after.study))-1
)
#give the data
jagsdataSMSC <- list(
Nobservations=8,
outcome=c(0,1,1,1,0,0,0,0)
)
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
library(rjags)
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
SMSCjagsResults <- jags(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
detach("package:rjags", unload = TRUE)
library(rjags)
# run the jugs model
SMSCjagsResults <- jags(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
library(rjags)
jags
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
install.packages("rjags")
library(rjags)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
library(r2jags)
library(R2jags)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
jagsmodelSMSC5 <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbin(p[i],n[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,0.001)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
#give the data
jagsdataSMSC <- list(
Nobservations=8,
n=c(20,19,19,20,20,19,17,20)
outcome=c(10,11,12,13,8,12,10,14)
)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
jagsmodelSMSC5 <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbin(p[i],n[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,1)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
#give the data
jagsdataSMSC <- list(
Nobservations=8,
n=c(20,19,19,20,20,19,17,20)
outcome=c(10,11,12,13,8,12,10,14)
)
jagsmodelSMSC5 <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbin(p[i],n[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,1)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
#give the data
jagsdataSMSC <- list(
Nobservations=8,
n=c(20,19,19,20,20,19,17,20)
outcome=c(10,11,12,13,8,12,10,14)
)
#give the data
jagsdataSMSC <- list(
Nobservations=8,
n=c(20,19,19,20,20,19,17,20),
outcome=c(10,11,12,13,8,12,10,14)
)
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
jagsdataSMSC<-list(Nobservations=8,n=c(20,19,19,20,20,19,17,20),outcome=c(10,11,12,13,8,12,10,14))
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
#give the data
jagsdataSMSC<-list(N=8,n=c(20,19,19,20,20,19,17,20),r=c(10,11,12,13,8,12,10,14))
jagsmodelSMSC5 <-function()
{
for(i in 1:N){
r[i]~dbin(p[i],n[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,1)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
logistic_model <- model{
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta
}
#Priors
beta ~ dnorm(0,0.1)
}
logistic_model <- model{
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta
}
#Priors
beta ~ dnorm(0,0.1)
}
logisticmodel <- model{
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta}
#Priors
beta ~ dnorm(0,0.1)
}
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta
}
logisticmodel <- model{
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta
}
#Priors
beta ~ dnorm(0,0.1)
}
logisticmodel <- function(){
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta
}
#Priors
beta ~ dnorm(0,0.1)
}
logisticdata<-list(n=8,Y=c(0,1,1,0,0,1,1,0))
model <- jags.model(logistic_model,data =  logisticdata,n.chains=3)
logisticdata<-list(n=8,Y=c(0,1,1,0,0,1,1,0))
model <- jags.model(logisticmodel,data =  logisticdata,n.chains=3)
model <- jags.model(model.file =logisticmodel,data =  logisticdata,n.chains=3)
model <- jags.model(model.file=logisticmodel,data =  logisticdata,n.chains=3)
jags(model.file=logisticmodel,data =  logisticdata,n.chains=3)
jags(model.file=logisticmodel,data =  logisticdata,n.chains=3,parameters.to.save = c("beta"))
jagsmodelSMSC5 <-function(){
for(i in 1:N){
r[i]~ dbern(p[i])
#likelihood
logit(p[i])<-b
# h[i]~dnorm(logit(p[i]),prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
b~dnorm(0,1)
# priors for variance
#prec.h<-pow(sigma.h, -2)
# sigma.h~dunif(0,10)
}
jagsdataSMSC<-list(n=8,Y=c(0,1,1,0,0,1,1,0))
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
jagsdataSMSC<-list(N=8,Y=c(0,1,1,0,0,1,1,0))
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
rnorm(8)
logisticmodel <- function(){
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta+beta1*X[i]
}
#Priors
beta ~ dnorm(0,0.1)
}
logisticdata<-list(n=8,Y=c(0,1,1,0,0,1,1,0),X=rnorm(8))
jags(model.file=logisticmodel,data =  logisticdata,n.chains=3,parameters.to.save = c("beta"))
logisticmodel <- function(){
# Likelihood
for(i in 1:n){
Y[i] ~ dbern(q[i])
logit(q[i]) <- beta+beta1*X[i]
}
#Priors
beta ~ dnorm(0,0.1)
beta1 ~ dnorm(0,0.1)
}
logisticdata<-list(n=8,Y=c(0,1,1,0,0,1,1,0),X=rnorm(8))
jags(model.file=logisticmodel,data =  logisticdata,n.chains=3,parameters.to.save = c("beta", "beta1"))
jagsmodelSMSC5 <-function(){
for(i in 1:N){
r[i]~ dbern(p[i])
logit(p[i])<-b
}
b~dnorm(0,0.1)
}
#give the data
jagsdataSMSC<-list(N=8,r=c(0,1,1,0,0,1,1,0))
# run the jugs model
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,inits=NULL,parameters.to.save = c("b"),model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"),model.file = jagsmodelSMSC5)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5, n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,n.burnin = 1000,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,DIC=F,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,,n.thin = 1)
SMSCjagsResults <-jags.parallel(data = jagsdataSMSC,parameters.to.save = c("b"), model.file = jagsmodelSMSC5,n.thin = 1)
